// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/libsv/go-p4"
	"sync"
)

// Ensure, that PaymentRequestServiceMock does implement p4.PaymentRequestService.
// If this is not the case, regenerate this file with moq.
var _ p4.PaymentRequestService = &PaymentRequestServiceMock{}

// PaymentRequestServiceMock is a mock implementation of p4.PaymentRequestService.
//
// 	func TestSomethingThatUsesPaymentRequestService(t *testing.T) {
//
// 		// make and configure a mocked p4.PaymentRequestService
// 		mockedPaymentRequestService := &PaymentRequestServiceMock{
// 			PaymentRequestFunc: func(ctx context.Context, args p4.PaymentRequestArgs) (*p4.PaymentRequest, error) {
// 				panic("mock out the PaymentRequest method")
// 			},
// 		}
//
// 		// use mockedPaymentRequestService in code that requires p4.PaymentRequestService
// 		// and then make assertions.
//
// 	}
type PaymentRequestServiceMock struct {
	// PaymentRequestFunc mocks the PaymentRequest method.
	PaymentRequestFunc func(ctx context.Context, args p4.PaymentRequestArgs) (*p4.PaymentRequest, error)

	// calls tracks calls to the methods.
	calls struct {
		// PaymentRequest holds details about calls to the PaymentRequest method.
		PaymentRequest []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Args is the args argument value.
			Args p4.PaymentRequestArgs
		}
	}
	lockPaymentRequest sync.RWMutex
}

// PaymentRequest calls PaymentRequestFunc.
func (mock *PaymentRequestServiceMock) PaymentRequest(ctx context.Context, args p4.PaymentRequestArgs) (*p4.PaymentRequest, error) {
	if mock.PaymentRequestFunc == nil {
		panic("PaymentRequestServiceMock.PaymentRequestFunc: method is nil but PaymentRequestService.PaymentRequest was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		Args p4.PaymentRequestArgs
	}{
		Ctx:  ctx,
		Args: args,
	}
	mock.lockPaymentRequest.Lock()
	mock.calls.PaymentRequest = append(mock.calls.PaymentRequest, callInfo)
	mock.lockPaymentRequest.Unlock()
	return mock.PaymentRequestFunc(ctx, args)
}

// PaymentRequestCalls gets all the calls that were made to PaymentRequest.
// Check the length with:
//     len(mockedPaymentRequestService.PaymentRequestCalls())
func (mock *PaymentRequestServiceMock) PaymentRequestCalls() []struct {
	Ctx  context.Context
	Args p4.PaymentRequestArgs
} {
	var calls []struct {
		Ctx  context.Context
		Args p4.PaymentRequestArgs
	}
	mock.lockPaymentRequest.RLock()
	calls = mock.calls.PaymentRequest
	mock.lockPaymentRequest.RUnlock()
	return calls
}
